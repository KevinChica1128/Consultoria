L1=c(L1,X_b-(qnorm(1-alfa/2)*sqrt((X_b(1-X_b))/length(na.omit(datos1[,i])))))
L2=c(L2,X_b+(qnorm(1-alfa/2)*sqrt((X_b(1-X_b))/length(na.omit(datos1[,i])))))
intervalos[i,2]=L1[i] ; intervalos[i,3]=L2[i]
}
for(i in 1:length(datos[,1])){
L1=c(L1,X_b-(qnorm(1-alfa/2)*sqrt((X_b*(1-X_b))/length(na.omit(datos1[,i])))))
L2=c(L2,X_b+(qnorm(1-alfa/2)*sqrt((X_b*(1-X_b))/length(na.omit(datos1[,i])))))
intervalos[i,2]=L1[i] ; intervalos[i,3]=L2[i]
}
library("ggplot2")
library("Rmisc")
install.packages("Rmisc")
library("Rmisc")
df=data.frame(intervalos)
df
graf1=ggplot(df,aes(cod,proporcion, ymin=inferior, ymax=superior))+
ylim(-0.05,0.2)+
geom_pointrange() +
geom_errorbar(aes(ymin=inferior, ymax=superior), width=0.9)
graf1
x11()
graf1
x11()
graf1
View(datos)
library(rriskDistributions)
res1<-fit.cont(datos[20,][!is.na(datos[20,])]) #Ver distribución de las mortalidades de los individuos
#Intervalos de credibilidad con Poisson:
library("HDInterval")
library("TeachingDemos")
#Cargamos la base de datos de los pollos muertos:
pollosmuertos<- read_excel("GitHub/Consultoria/PROPUESTA FUNDEMERCA (2.5).xlsx")
#Cargamos la base de datos
library(readxl)
#Cargamos la base de datos de los pollos muertos:
pollosmuertos<- read_excel("GitHub/Consultoria/PROPUESTA FUNDEMERCA (2.5).xlsx")
#Cargamos la base de datos
library(readxl)
#Intervalos de credibilidad con Poisson:
library("HDInterval")
library("TeachingDemos")
#Cargamos la base de datos de los pollos muertos:
pollosmuertos<- read_excel("GitHub/Consultoria/PROPUESTA FUNDEMERCA (2.5).xlsx")
#Cargamos la base de datos de los pollos muertos:
pollosmuertos<- read_excel("PROPUESTA FUNDEMERCA (2.5).xlsx")
pollosmuertos<-as.data.frame(pollosmuertos[,c(-1,-2)])
row.names(pollosmuertos)<-PROPUESTA_FUNDEMERCA_1_$Producor
View(pollosmuertos)
#Para el ciclo 50 del productor ALBEIRO HERNANDEZ
L1<-rgamma(10000,pollosmuertos[1,1]+(1/2), rate=1) #Valores simulados de la aposteriori
emp.hpd (L1, conf = 0.95 )   #Intervalo con el 95% de confianza
#Con los cuantiles
qgamma(0.025,pollosmuertos[1,1]+(1/2), rate=1)
qgamma(0.975,pollosmuertos[1,1]+(1/2), rate=1)
#Generalización para todos los ciclos y todos los productores con función:
Intervalos<-data.frame(matrix(NA,48,51))#matriz para almacenar los intervalos
colnames(Intervalos)=c("cod",rep(c("Inferior","Superior"),25))
row.names(Intervalos)=PROPUESTA_FUNDEMERCA_1_$Producor
Intervalos[,1]=1:48
for (j in 1:length(datos[,1])) {
for (i in seq(2,51,2)) {
if(anyNA(pollosmuertos[j,i-(i/2)])=="TRUE"){
is.na<-Intervalos[j,i]
is.na<-Intervalos[j,i+1]
}else{
L<-rgamma(10000,pollosmuertos[j,i-(i/2)]+(1/2),rate = 1)
Intervalos[j,i]=emp.hpd(L,0.95)[1]
Intervalos[j,i+1]=emp.hpd(L,0.95)[2]
}
}
}
#Generalización para todos los ciclos y todos los productores con cuantiles:
IntervalosC<-data.frame(matrix(NA,48,51))#matriz para almacenar los intervalos
colnames(IntervalosC)=c("cod",rep(c("Inferior","Superior"),25))
row.names(IntervalosC)=PROPUESTA_FUNDEMERCA_1_$Producor
IntervalosC[,1]=1:48
for (j in 1:length(datos[,1])) {
for (i in seq(2,51,2)) {
if(anyNA(pollosmuertos[j,i-(i/2)])=="TRUE"){
is.na<-IntervalosC[j,i]
is.na<-IntervalosC[j,i+1]
}else{
L<-rgamma(10000,pollosmuertos[j,i-(i/2)]+(1/2),rate = 1)
IntervalosC[j,i]=qgamma(0.025,pollosmuertos[j,i-(i/2)]+(1/2), rate=1)
IntervalosC[j,i+1]=qgamma(0.975,pollosmuertos[j,i-(i/2)]+(1/2), rate=1)
}
}
}
gamma(2)
gamma(3)
#Función de la predictiva posterior
funcion<-function(y,x){((gamma((1/2)+x+y))/(gamma((1/2)+x)*gamma(y+1)))*(1/2)^((1/2)+x+y)}
View(funcion)
#Función de la predictiva posterior
funcion<-function(y,x){((gamma((1/2)+x+y))/(gamma((1/2)+x)*gamma(y+1)))*((1/2)^((1/2)+x+y))}
View(pollosmuertos)
pollosmuertos[1,1]+(1/2)
mean(L1)
funcion(100)
Inf
#Probabilidad de que el numero de pollos sea mayor al de un ciclo
integrate(funcion(100),0,Inf)
#Probabilidad de que el numero de pollos sea mayor al de un ciclo
y=100
integrate(funcion,0,Inf)
x
#Función de la predictiva posterior
funcion<-function(x){((gamma((1/2)+x+y))/(gamma((1/2)+x)*gamma(y+1)))*((1/2)^((1/2)+x+y))}
#Probabilidad de que el numero de pollos sea mayor al de un ciclo
y=100
integrate(funcion,0,Inf)
#Probabilidad de que el numero de pollos sea mayor al de un ciclo
x=100
#Función de la predictiva posterior
funcion<-function(y){((gamma((1/2)+x+y))/(gamma((1/2)+x)*gamma(y+1)))*((1/2)^((1/2)+x+y))}
#Probabilidad de que el numero de pollos sea mayor al de un ciclo
x=100
integrate(funcion,0,Inf)
#La distribución predictiva posterior es una binomial negativa:
#La probabilidad de que el productor ALBEIRO HERNANDEZ tenga mas pollos muertos que en el ciclo 50 es:
pnbinom(100,(1/2)+100,0.5,lower.tail = T)
#La distribución predictiva posterior es una binomial negativa:
#La probabilidad de que el productor ALBEIRO HERNANDEZ tenga mas pollos muertos que en el ciclo 50 es:
pnbinom(532,(1/2)+532,0.5,lower.tail = T)
#La distribución predictiva posterior es una binomial negativa:
#La probabilidad de que el productor ALBEIRO HERNANDEZ tenga mas pollos muertos que en el ciclo 50 es:
pnbinom(216,(1/2)+216,0.5,lower.tail = T)
View(IntervalosC)
View(IntervalosC)
View(datos)
#Para el ciclo 50 del productor ALBEIRO HERNANDEZ
qbeta(0.025,datos[1,1]+(1/2),1-datos[1,1]+(1/2))
qbeta(0.975,datos[1,1]+(1/2),1-datos[1,1]+(1/2))
datos[1,1]+(1/2)
datos[1,1]+(1/2)
#Para el ciclo 50 del productor ALBEIRO HERNANDEZ
qbeta(0.025,-1+(1/2),1/2)
#La distribución predictiva posterior es una binomial negativa:
#La probabilidad de que el productor ALBEIRO HERNANDEZ tenga mas pollos muertos que en el ciclo 50 es:
pnbinom(216,(1/2)+216,0.5,lower.tail = T)
View(datos)
View(datos1)
View(pollosmuertos)
rownames(pollosmuertos)
c("cod",colnames(pollosmuertos))
length(datos[,1])
length(datos[1,])
#La distribución predictiva posterior es una binomial negativa:
#La probabilidad de que el productor ALBEIRO HERNANDEZ tenga mas pollos muertos que en el ciclo 50 es:
pnbinom(100,(1/2)+100,0.5,lower.tail = T)
#Generalización para las probabilidades predictivas para cada ciclo por productor:
PredictivasP<-data.frame(matrix(NA,48,26))#matriz para almacenar los intervalos
colnames(PredictivasP)=c("cod",colnames(pollosmuertos))
row.names(PredictivasP)=PROPUESTA_FUNDEMERCA_1_$Producor
View(PredictivasP)
PredictivasP[,1]=1:48
for (j in 1:length(datos[,1])) {
for (i in 1:length(datos[1,])) {
if(anyNA(pollosmuertos[j,i])=="TRUE"){
is.na<-PredictivasP[j,i]
}else{
PredictivasP[j,i]=pnbinom(pollosmuertos[j,i],(1/2)+pollosmuertos[j,i],0.5,lower.tail = T)
}
}
}
#Generalización para las probabilidades predictivas para cada ciclo por productor:
PredictivasP<-data.frame(matrix(NA,48,26))#matriz para almacenar los intervalos
colnames(PredictivasP)=c("cod",colnames(pollosmuertos))
row.names(PredictivasP)=PROPUESTA_FUNDEMERCA_1_$Producor
PredictivasP[,1]=1:48
for (j in 1:length(datos[,1])) {
for (i in 2:length(datos[1,])) {
if(anyNA(pollosmuertos[j,i])=="TRUE"){
is.na<-PredictivasP[j,i]
}else{
PredictivasP[j,i]=pnbinom(pollosmuertos[j,i],(1/2)+pollosmuertos[j,i],0.5,lower.tail = T)
}
}
}
View(IntervalosC)
#Generalización para las probabilidades predictivas para cada ciclo por productor:
PredictivasP<-data.frame(matrix(NA,48,26))#matriz para almacenar los intervalos
colnames(PredictivasP)=c("cod",colnames(pollosmuertos))
row.names(PredictivasP)=PROPUESTA_FUNDEMERCA_1_$Producor
PredictivasP[,1]=1:48
for (j in 1:length(datos[,1])) {
for (i in 2:length(datos[1,])+1) {
if(anyNA(pollosmuertos[j,i])=="TRUE"){
is.na<-PredictivasP[j,i]
}else{
PredictivasP[j,i]=pnbinom(pollosmuertos[j,i],(1/2)+pollosmuertos[j,i],0.5,lower.tail = T)
}
}
}
#Generalización para las probabilidades predictivas para cada ciclo por productor:
PredictivasP<-data.frame(matrix(NA,48,26))#matriz para almacenar los intervalos
colnames(PredictivasP)=c("cod",colnames(pollosmuertos))
row.names(PredictivasP)=PROPUESTA_FUNDEMERCA_1_$Producor
PredictivasP[,1]=1:48
for (j in 1:length(datos[,1])) {
for (i in 2:26) {
if(anyNA(pollosmuertos[j,i-1])=="TRUE"){
is.na<-PredictivasP[j,i-1]
}else{
PredictivasP[j,i-1]=pnbinom(pollosmuertos[j,i-1],(1/2)+pollosmuertos[j,i-1],0.5,lower.tail = T)
}
}
}
PredictivasP<-data.frame(matrix(NA,48,26))#matriz para almacenar los intervalos
colnames(PredictivasP)=c("cod",colnames(pollosmuertos))
row.names(PredictivasP)=PROPUESTA_FUNDEMERCA_1_$Producor
PredictivasP[,1]=1:48
for (j in 1:length(datos[,1])) {
for (i in 2:26) {
if(anyNA(pollosmuertos[j,i-1])=="TRUE"){
is.na<-PredictivasP[j,i]
}else{
PredictivasP[j,i]=pnbinom(pollosmuertos[j,i-1],(1/2)+pollosmuertos[j,i-1],0.5,lower.tail = T)
}
}
}
pnbinom(100,105,0.5)
1-pnbinom(100,105,0.5)
pnbinom(100,100.5,0.5)
#La distribución predictiva posterior es una binomial negativa:
#La probabilidad de que el productor ALBEIRO HERNANDEZ tenga mas pollos muertos que en el ciclo 50 es:
pnbinom(100,(1/2)+100,0.5,lower.tail = T)
#La distribución predictiva posterior es una binomial negativa:
#La probabilidad de que el productor ALBEIRO HERNANDEZ tenga mas pollos muertos que en el ciclo 50 es:
pnbinom(100,(1/2)+100,0.5,lower.tail = F)
#Generalización para las probabilidades predictivas para cada ciclo por productor:
PredictivasP<-data.frame(matrix(NA,48,26))#matriz para almacenar los intervalos
colnames(PredictivasP)=c("cod",colnames(pollosmuertos))
row.names(PredictivasP)=PROPUESTA_FUNDEMERCA_1_$Producor
PredictivasP[,1]=1:48
for (j in 1:length(datos[,1])) {
for (i in 2:26) {
if(anyNA(pollosmuertos[j,i-1])=="TRUE"){
is.na<-PredictivasP[j,i]
}else{
PredictivasP[j,i]=pnbinom(pollosmuertos[j,i-1],(1/2)+pollosmuertos[j,i-1],0.5,lower.tail = F)
}
}
}
pnbinom(100,100.5,0.5,lower.tail = F)
1-pnbinom(100,100.5,0.5)
x11()
boxplot(pollosmuertos[1,])
pollosmuertos[1,]
x11()
boxplot(numeric(pollosmuertos[1,]))
#Detectar datos atipicos:
t(pollosmuertos)
#Detectar datos atipicos:
Tpollosmuertos<-t(pollosmuertos)
#Detectar datos atipicos:
Tpollosmuertos<-as.data.frame(t(pollosmuertos))
x11()
x11()
boxplot(Tpollosmuertos$`ALBEIRO HERNANDEZ`)
x11()
boxplot(Tpollosmuertos$`ALBEIRO HERNANDEZ`,labels(seq(50,77)))
boxplot.stats(Tpollosmuertos$`ALBEIRO HERNANDEZ`)
boxplot.stats(Tpollosmuertos$`ALBEIRO HERNANDEZ`)$out #Puntos atipicos para el primer productor
#Generalización y guardado de los resultados:
PAtipicos<-data.frame(matrix(NA,nrow = 48,ncol = 5)
#Generalización y guardado de los resultados:
PAtipicos<-data.frame(matrix(NA,nrow = 48,ncol = 5))
#Generalización y guardado de los resultados:
PAtipicos<-data.frame(matrix(NA,nrow = 48,ncol = 5))
rep("Dato atipico",5)
#Generalización y guardado de los resultados:
PAtipicos<-data.frame(matrix(NA,nrow = 48,ncol = 6))
colnames(PAtipicos)=c("cod",rep("Dato atipico",5))
row.names(PAtipicos)=PROPUESTA_FUNDEMERCA_1_$Producor
View(PAtipicos)
PAtipicos[,1]=1:48
length(datos[,1])
2:7
Tpollosmuertos[,1]
boxplot.stats(Tpollosmuertos[,1])$out
boxplot.stats(Tpollosmuertos$`ALBEIRO HERNANDEZ`)$out[1] #Puntos atipicos para el primer productor
boxplot.stats(Tpollosmuertos$`ALBEIRO HERNANDEZ`)$out[2] #Puntos atipicos para el primer productor
#Generalización y guardado de los resultados:
PAtipicos<-data.frame(matrix(NA,nrow = 48,ncol = 6))
colnames(PAtipicos)=c("cod",rep("Dato atipico",5))
row.names(PAtipicos)=PROPUESTA_FUNDEMERCA_1_$Producor
PAtipicos[,1]=1:48
for (j in 1:length(datos[,1])) {
for (i in 2:6) {
if(anyNA(boxplot.stats(Tpollosmuertos[,j])$out[i-1])=="TRUE"){
is.na<-PAtipicos[j,i]
}else{
PAtipicos[j,i]=boxplot.stats(Tpollosmuertos[,j])$out[i-1]
}
}
}
View(PAtipicos)
#Generalización y guardado de los resultados:
PAtipicos<-data.frame(matrix(NA,nrow = 48,ncol = 5))
colnames(PAtipicos)=c("cod",rep("Dato atipico",5))
colnames(PAtipicos)=c("cod",rep("Dato atipico",4))
row.names(PAtipicos)=PROPUESTA_FUNDEMERCA_1_$Producor
PAtipicos[,1]=1:48
for (j in 1:length(datos[,1])) {
for (i in 2:6) {
if(anyNA(boxplot.stats(Tpollosmuertos[,j])$out[i-1])=="TRUE"){
is.na<-PAtipicos[j,i]
}else{
PAtipicos[j,i]=boxplot.stats(Tpollosmuertos[,j])$out[i-1]
}
}
}
descriptivas
View(datos)
#Detectar datos atipicos proporción de pollos muertos:
Tproporción<-as.data.frame(t(datos))
View(Tproporción)
x11()
boxplot(Tproporción$`ALBEIRO HERNANDEZ`)
boxplot.stats(Tproporción$`ALBEIRO HERNANDEZ`)$out[2] #Puntos atipicos para el primer productor
boxplot.stats(Tproporción$`ALBEIRO HERNANDEZ`)$out#Puntos atipicos para el primer productor
#Generalización y guardado de los resultados:
PAtipicosbin<-data.frame(matrix(NA,nrow = 48,ncol = 5))
colnames(PAtipicosbin)=c("cod",rep("Dato atipico",4))
row.names(PAtipicosbin)=PROPUESTA_FUNDEMERCA_1_$Producor
View(PAtipicosbin)
PAtipicosbin[,1]=1:48
#Detectar datos atipicos proporción de pollos muertos:
Tproporcion<-as.data.frame(t(datos))
#Generalización y guardado de los resultados:
PAtipicosbin<-data.frame(matrix(NA,nrow = 48,ncol = 5))
colnames(PAtipicosbin)=c("cod",rep("Dato atipico",4))
row.names(PAtipicosbin)=PROPUESTA_FUNDEMERCA_1_$Producor
PAtipicosbin[,1]=1:48
for (j in 1:length(datos[,1])) {
for (i in 2:6) {
if(anyNA(boxplot.stats(Tproporcion[,j])$out[i-1])=="TRUE"){
is.na<-PAtipicosbin[j,i]
}else{
PAtipicosbin[j,i]=boxplot.stats(Tproporcion[,j])$out[i-1]
}
}
}
#Generalización y guardado de los resultados:
PAtipicosbin<-data.frame(matrix(NA,nrow = 48,ncol = 6))
colnames(PAtipicosbin)=c("cod",rep("Dato atipico",4))
row.names(PAtipicosbin)=PROPUESTA_FUNDEMERCA_1_$Producor
PAtipicosbin[,1]=1:48
for (j in 1:length(datos[,1])) {
for (i in 2:6) {
if(anyNA(boxplot.stats(Tproporcion[,j])$out[i-1])=="TRUE"){
is.na<-PAtipicosbin[j,i]
}else{
PAtipicosbin[j,i]=boxplot.stats(Tproporcion[,j])$out[i-1]
}
}
}
#Generalización y guardado de los resultados:
PAtipicosbin<-data.frame(matrix(NA,nrow = 48,ncol = 6))
colnames(PAtipicosbin)=c("cod",rep("Dato atipico",4))
row.names(PAtipicosbin)=PROPUESTA_FUNDEMERCA_1_$Producor
PAtipicosbin[,1]=1:48
for (j in 1:length(datos[,1])) {
for (i in 2:7) {
if(anyNA(boxplot.stats(Tproporcion[,j])$out[i-1])=="TRUE"){
is.na<-PAtipicosbin[j,i]
}else{
PAtipicosbin[j,i]=boxplot.stats(Tproporcion[,j])$out[i-1]
}
}
}
#Generalización y guardado de los resultados:
PAtipicosbin<-data.frame(matrix(NA,nrow = 48,ncol = 5))
colnames(PAtipicosbin)=c("cod",rep("Dato atipico",4))
row.names(PAtipicosbin)=PROPUESTA_FUNDEMERCA_1_$Producor
PAtipicosbin[,1]=1:48
for (i in 2:6) {
if(anyNA(boxplot.stats(Tproporcion[,j])$out[i-1])=="TRUE"){
is.na<-PAtipicosbin[j,i]
}else{
PAtipicosbin[j,i]=boxplot.stats(Tproporcion[,j])$out[i-1]
}
}
PAtipicosbin[,1]=1:48
for (j in 1:length(datos[,1])) {
for (i in 2:6) {
if(anyNA(boxplot.stats(Tproporcion[,j])$out[i-1])=="TRUE"){
is.na<-PAtipicosbin[j,i]
}else{
PAtipicosbin[j,i]=boxplot.stats(Tproporcion[,j])$out[i-1]
}
}
}
library(readxl)
ARCHIVO_DE_DATOS_FUNDEMERCA <- read_excel("ARCHIVO DE DATOS FUNDEMERCA.xlsx",
col_types = c("numeric", "text", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric"))
View(ARCHIVO_DE_DATOS_FUNDEMERCA)
View(ARCHIVO_DE_DATOS_FUNDEMERCA)
library(readxl)
#Cargamos la base de datos de los pollos muertos:
pollosmuertos<- read_excel("ARCHIVO DE DATOS FUNDEMERCA.xlsx")
pollosmuertos<-as.data.frame(pollosmuertos[C(-49,-50),c(-1,-2)])
pollosmuertos<-as.data.frame(pollosmuertos[C(-49,-50),c(-1,-2)])
pollosmuertos<-as.data.frame(pollosmuertos[c(-49,-50),c(-1,-2)])
row.names(pollosmuertos)<-PROPUESTA_FUNDEMERCA_1_$Producor
pollosmuertos<-as.data.frame(pollosmuertos[c(-49,-50),c(-1,-2,-23,-24)])
row.names(pollosmuertos)<-PROPUESTA_FUNDEMERCA_1_$Producor
#Detectar datos atipicos pollos muertos:
Tpollosmuertos<-as.data.frame(t(pollosmuertos))
x11()
boxplot(Tpollosmuertos$`ALBEIRO HERNANDEZ`)
boxplot.stats(Tpollosmuertos$`ALBEIRO HERNANDEZ`)$out[2] #Puntos atipicos para el primer productor
#Generalización y guardado de los resultados:
PAtipicos<-data.frame(matrix(NA,nrow = 48,ncol = 5))
colnames(PAtipicos)=c("cod",rep("Dato atipico",4))
row.names(PAtipicos)=PROPUESTA_FUNDEMERCA_1_$Producor
PAtipicos[,1]=1:48
for (j in 1:length(datos[,1])) {
for (i in 2:6) {
if(anyNA(boxplot.stats(Tpollosmuertos[,j])$out[i-1])=="TRUE"){
is.na<-PAtipicos[j,i]
}else{
PAtipicos[j,i]=boxplot.stats(Tpollosmuertos[,j])$out[i-1]
}
}
}
#Cargamos la base de datos de los pollos muertos:
pollosmuertos<- read_excel("ARCHIVO DE DATOS FUNDEMERCA.xlsx")
pollosmuertos<-as.data.frame(pollosmuertos[c(-49,-50),c(-1,-2,-23,-24)])
row.names(pollosmuertos)<-PROPUESTA_FUNDEMERCA_1_$Producor
#Cargamos la base de datos de los pollos muertos:
pollosmuertos<- read_excel("ARCHIVO DE DATOS FUNDEMERCA.xlsx")
pollosmuertos<-as.data.frame(pollosmuertos[c(-49,-50),c(-1,-2,-25,-26)])
row.names(pollosmuertos)<-PROPUESTA_FUNDEMERCA_1_$Producor
#Detectar datos atipicos pollos muertos:
Tpollosmuertos<-as.data.frame(t(pollosmuertos))
#Generalización y guardado de los resultados:
PAtipicos<-data.frame(matrix(NA,nrow = 48,ncol = 5))
colnames(PAtipicos)=c("cod",rep("Dato atipico",4))
row.names(PAtipicos)=PROPUESTA_FUNDEMERCA_1_$Producor
PAtipicos[,1]=1:48
for (j in 1:length(datos[,1])) {
for (i in 2:6) {
if(anyNA(boxplot.stats(Tpollosmuertos[,j])$out[i-1])=="TRUE"){
is.na<-PAtipicos[j,i]
}else{
PAtipicos[j,i]=boxplot.stats(Tpollosmuertos[,j])$out[i-1]
}
}
}
#Cargamos la base de datos de los pollos muertos:
pollosmuertos<- read_excel("ARCHIVO DE DATOS FUNDEMERCA.xlsx")
pollosmuertos<-as.data.frame(pollosmuertos[c(-49,-50),c(-1,-2,-25,-26)])
row.names(pollosmuertos)<-PROPUESTA_FUNDEMERCA_1_$Producor
#Detectar datos atipicos pollos muertos:
Tpollosmuertos<-as.data.frame(t(pollosmuertos))
#Generalización y guardado de los resultados:
PAtipicos<-data.frame(matrix(NA,nrow = 48,ncol = 5))
colnames(PAtipicos)=c("cod",rep("Dato atipico",4))
row.names(PAtipicos)=PROPUESTA_FUNDEMERCA_1_$Producor
PAtipicos[,1]=1:48
for (j in 1:length(datos[,1])) {
for (i in 2:6) {
if(anyNA(boxplot.stats(Tpollosmuertos[,j])$out[i-1])=="TRUE"){
is.na<-PAtipicos[j,i]
}else{
PAtipicos[j,i]=boxplot.stats(Tpollosmuertos[,j])$out[i-1]
}
}
}
#Detectar datos atipicos proporción de pollos muertos:
Tproporcion<-as.data.frame(t(datos))
#Generalización y guardado de los resultados:
PAtipicosbin<-data.frame(matrix(NA,nrow = 48,ncol = 5))
colnames(PAtipicosbin)=c("cod",rep("Dato atipico",4))
#Generalización y guardado de los resultados:
PAtipicos<-data.frame(matrix(NA,nrow = 48,ncol = 5))
colnames(PAtipicos)=c("cod",rep("Dato atipico",4))
row.names(PAtipicos)=PROPUESTA_FUNDEMERCA_1_$Producor
PAtipicos[,1]=1:48
for (j in 1:length(datos[,1])) {
for (i in 2:6) {
if(anyNA(boxplot.stats(Tpollosmuertos[,j])$out[i-1])=="TRUE"){
is.na<-PAtipicos[j,i]
}else{
PAtipicos[j,i]=boxplot.stats(Tpollosmuertos[,j])$out[i-1]
}
}
}
#Generalización y guardado de los resultados:
PAtipicos<-data.frame(matrix(NA,nrow = 48,ncol = 6))
colnames(PAtipicos)=c("cod",rep("Dato atipico",5))
row.names(PAtipicos)=PROPUESTA_FUNDEMERCA_1_$Producor
PAtipicos[,1]=1:48
for (j in 1:length(datos[,1])) {
for (i in 2:7) {
if(anyNA(boxplot.stats(Tpollosmuertos[,j])$out[i-1])=="TRUE"){
is.na<-PAtipicos[j,i]
}else{
PAtipicos[j,i]=boxplot.stats(Tpollosmuertos[,j])$out[i-1]
}
}
}
